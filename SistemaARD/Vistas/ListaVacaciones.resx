<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnFiltrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>